---
export const prerender = false;

import { marked } from "marked";
import type Post from "../../interfaces/post";
import Layout from "../../layouts/Layout.astro";
import fetchApi from "../../lib/strapi.js";
import { processContent } from "../../lib/utils/prepareContentForTOC";
import Toc from "../../components/Toc.astro";

const { slug } = Astro.params;

const post = await fetchApi<Post>({
  endpoint: `posts?filters[slug]=${slug}&populate=featuredImage`,
  wrappedByKey: "data",
  wrappedByList: true,
});

if (!post) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const { title, content, description, publishedAt, featuredImage } = post;
const { url, alternativeText } = featuredImage;

const postContent = await marked.parse(content);
const { processedContent: contentWithIds, headings: extractedHeadings } = processContent(postContent);
---

<Layout title={title} description={description}>

  <div class="post-header">

    <div class="title-image-container">
      <div class="post-image-container">
        <h1 transition:name={`title-${slug}`}>{title}</h1>
        <img
          width="450"
          height="300"
          transition:name={`img-${slug}`}
          class="post-image"
          src={url}
          alt={alternativeText}
        />
      </div>
    </div>

    <div class="description-data">
      <p transition:name={`description-${slug}`}>{description}</p>
      <time datetime={publishedAt}>
        {new Date(publishedAt).toLocaleDateString()}
      </time>
    </div>

  </div>

  <main>
    <article class="content">
      <div class="post-content" set:html={contentWithIds} />
      <Toc extractedHeadings={extractedHeadings} />
    </article>
  </main>
</Layout>
<style>
  /* Layout principal */
  .content {
    display: flex;
    flex-direction: row;
    line-height: 1.6;
    color: #333;
    margin: 0 auto;
    max-width: 1200px;
    gap: 20px;
  }

  .post-content {
    padding: 20px;
    box-sizing: border-box;
  }

  .post-content {
    flex: 1;
  }
  /* Header del post */
  .post-header {
    display: flex;
    flex-direction: row;
    max-width: 1000px;
    margin: auto;
    gap: 20px;
    box-sizing: border-box;
    padding: 20px;
  }

  .post-header > div {
    flex: 1;
  }

  .post-header h1 {
    font-size: 2.5rem;
    margin-bottom: 16px;
    align-self: center;
  }

  .post-header p {
    font-size: 1.2rem;
  }

  .post-header time {
    font-size: 0.9rem;
    color: #999;
    margin-bottom: 20px;
  }

  .post-image-container {
    display: block;
    justify-content: center;
    margin: 0 auto;
  }

  .post-image {
    max-width: 350px;
    width: 100%;
    height: auto;
    border-radius: 8px;
    object-fit: cover;
  }

  .description-data {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  /* Enlaces de ancla (#) */
  :global(.anchor-link) {
    color: #ccc;
    text-decoration: none;
    margin-left: 8px;
    font-weight: normal;
    opacity: 0;
    transition:
      opacity 0.2s ease,
      color 0.2s ease;
    font-size: 0.8em;
  }

  :global(h1:hover .anchor-link),
  :global(h2:hover .anchor-link),
  :global(h3:hover .anchor-link),
  :global(h4:hover .anchor-link) {
    opacity: 1;
  }

  :global(.anchor-link:hover) {
    color: #666;
    text-decoration: none;
  }

  /* Navegación suave y offset */
  :global(html) {
    scroll-behavior: smooth;
  }

  :global(h1[id]),
  :global(h2[id]),
  :global(h3[id]),
  :global(h4[id]) {
    scroll-margin-top: 20px;
  }

  /* Imágenes en el contenido */
  :global(main p img) {
    max-width: 450px;
    max-height: 450px;
    object-fit: cover;
    border-radius: 8px;
    display: block;
    margin: 0 auto;
  }
</style>
